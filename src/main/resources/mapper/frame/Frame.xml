<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="Frame">
  <select id="selectList" parameterType="HashMap" resultType="CmmnMap">
    SELECT  ROW_NUMBER() OVER(ORDER BY A.CREATE_TS DESC) AS RN
          , ROW_NUMBER() OVER(ORDER BY A.CREATE_TS ASC) AS IDX
   		  , A.ID
   		  , B.ID MOV_ID
   		  , COLLECTION_DT
   		  , COLLECTION_POS
   		  , COLLECTION_DEVICE_CD
   		  , SOURCE_CD
   		  , DAY_OR_NIGHT
   		  , STILL_OR_MOVIE
   		  , DATA_TYPE
   		  , B.EXTRACT_STATUS_CD
   		  , E.FILE_NM
   		  , E.ORIGIN_FILE_NM
   		  , E.FILE_PATH
   		  , A.CREATE_USER_ID
   		  , C.USER_NM CREATE_USER_NM
   		  , A.CREATE_TS 
   		  , A.UPDATE_USER_ID
   		  , D.USER_NM UPDATE_USER_NM
   		  , A.UPDATE_TS 
   		  , A.APPROVED_TS
   		  , B.FILE_TYPE          
          , B.IMAGE_SIZE      
          , B.FPS   
          , B.EXTRACT_START_TS
          , B.EXTRACT_END_TS
          , E.SEQ
   	FROM TB_DATASET_INFO A
   	LEFT JOIN TB_MOVIE_INFO B
   	ON   A.ID = B.PARENT_ID
   	INNER JOIN (SELECT USER_ID,USER_NM FROM TB_USER 
	           WHERE UNIT_ID IN (SELECT ID 
	                            FROM TB_UNIT 
	                            START WITH ID = #{schUnitId}
	                            CONNECT BY PRIOR ID = UPPER_ID)) C
    ON A.CREATE_USER_ID = C.USER_ID
   	LEFT JOIN TB_USER D
    ON A.UPDATE_USER_ID = D.USER_ID
    LEFT JOIN TB_FILE E
    ON B.PARENT_ID = E.ID
    AND B.FILE_SEQ = E.SEQ
    <where>
    AND A.STILL_OR_MOVIE = '002'
    AND E.FILE_TYPE != 'text/xml'
    <if test='frDt != null and !frDt.equals("")'>
    AND A.CREATE_TS <![CDATA[>=]]>  concat(replace(#{frDt},'.','-'),' 00:00:00:0000')
    </if>
    <if test='toDt != null and !toDt.equals("")'>
    AND A.CREATE_TS <![CDATA[<=]]>  concat(replace(#{toDt},'.','-'),' 23:59:59:9999')
    </if>
    <if test='schCollection != null and !schCollection.equals("")'>
    AND A.COLLECTION_DEVICE_CD = #{schCollection}
    </if>
    <if test='schStillOrMovie != null and !schStillOrMovie.equals("")'>
    AND A.STILL_OR_MOVIE = #{schStillOrMovie}
    </if>
    <if test='schDayOrNight != null and !schDayOrNight.equals("")'>
    AND A.DAY_OR_NIGHT = #{schDayOrNight}
    </if>
    <if test='schDataCd != null and !schDataCd.equals("")'>
    AND A.DATA_CD = #{schDataCd}
    </if>
    <if test='schWorkerNm != null and !schWorkerNm.equals("")'>
    AND ( C.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')) OR
         D.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')))
    </if>
    <if test='approvedYn != null and !approvedYn.equals("")'>
    <choose>
    <when test='approvedYn.equals("Y")'>
    AND  NOT A.APPROVED_TS IS NULL
    </when>
    <otherwise>
    AND  A.APPROVED_TS ISNULL
    </otherwise>
    </choose> 
    </if>
    <if test='extractStatusCd != null and !extractStatusCd.equals("")'>
    <choose>
    <when test='extractStatusCd.equals("001")'>
    AND (B.EXTRACT_STATUS_CD ISNULL OR B.EXTRACT_STATUS_CD != '002')
    </when>
    <otherwise>
    AND B.EXTRACT_STATUS_CD = #{extractStatusCd}
    </otherwise>
    </choose>
    </if>

    </where>
  </select>
  
  <select id="selectExtractImageList" parameterType="HashMap" resultType="CmmnMap">
    SELECT  ROW_NUMBER() OVER(ORDER BY B.CREATE_TS DESC) AS RN
          , ROW_NUMBER() OVER(ORDER BY B.CREATE_TS ASC) AS IDX
   		  , B.ID 
   		  , A.ID MOV_ID
   		  , A.IMAGE_SIZE
   		  , C.ID FILE_ID
   		  , C.SEQ
   		  , C.FILE_NM
   		  , C.ORIGIN_FILE_NM
   		  , C.FILE_PATH
   		  , C.WORK_FILE_PATH
   		  , C.THUMB_FILE_PATH
   		  , C.FILE_SIZE
   		  , C.FILE_TYPE
   		  , C.CREATE_USER_ID
   		  , C.CREATE_TS 
   		  , E.USER_NM CREATE_USER_NM
   	FROM TB_MOVIE_INFO A
   	INNER JOIN TB_IMAGE_INFO B
   	ON  A.ID = B.PARENT_ID
   	LEFT JOIN TB_FILE C
   	ON   B.PARENT_ID = C.ID
   	AND  B.FILE_SEQ = C.SEQ
   	INNER JOIN (SELECT USER_ID,USER_NM FROM TB_USER 
	           WHERE UNIT_ID IN (SELECT ID 
	                            FROM TB_UNIT 
	                            START WITH ID = #{schUnitId}
	                            CONNECT BY PRIOR ID = UPPER_ID)) D
    ON A.CREATE_USER_ID = D.USER_ID
   	LEFT JOIN TB_USER E
    ON A.UPDATE_USER_ID = E.USER_ID
    <where>
    AND A.ID = #{movieId}
    </where>
  </select>
  
  <select id="selectImageList" parameterType="HashMap" resultType="CmmnMap">
    SELECT  C.ID
   		  , C.SEQ
   		  , C.FILE_NM
   		  , C.ORIGIN_FILE_NM
   		  , C.FILE_PATH
   		  , C.FILE_TYPE
   	FROM TB_MOVIE_INFO A
   	LEFT JOIN TB_IMAGE_INFO B
   	ON  A.ID = B.PARENT_ID
   	LEFT JOIN TB_FILE C
   	ON   B.PARENT_ID = C.ID
   	AND  B.FILE_SEQ = C.SEQ
   	LEFT JOIN TB_USER D
    ON C.CREATE_USER_ID = D.USER_ID
    <where>
    AND A.ID = #{id}
    </where>
  </select>
  
    <select id="select" parameterType="HashMap" resultType="CmmnMap">
     	SELECT
     		 ID
     		, DATA_ID
     		, FILE_ID
     		, LABELING_YN
     		, CREATE_USER_ID
     		, CREATE_TS
     		, UPDATE_USER_ID
     		, UPDATE_TS
     	FROM TB_IMAGE_INFO
     	<where>
     	AND ID = #{id}
     	</where>
  </select>
  
  <select id="selectVo" parameterType="HashMap" resultType="DatasetVo">
     	SELECT
     		  ID
     		, DATA_ID
     		, FILE_ID
     		, LABELING_YN
     		, CREATE_USER_ID
     		, CREATE_TS
     		, UPDATE_USER_ID
     		, UPDATE_TS
     	FROM TB_IMAGE_INFO
     	<where>
     	AND ID = #{id}
     	</where>
  </select>
  
  <update id="extractMov" parameterType="CmmnMap">
       UPDATE TB_MOVIE_INFO
       SET EXTRACT_STATUS_CD =  #{extractStatusCd}
         , FILE_TYPE =  #{fileType}
         , IMAGE_SIZE =  #{imageSize}
         , FPS =  #{fps, jdbcType=INTEGER}
         , EXTRACT_START_TS = SYSDATE
         , UPDATE_USER_ID = #{userId, jdbcType=VARCHAR}
         , UPDATE_TS   = SYSDATE
       <where>
       AND ID = #{movId}
       </where>
  </update>
  
  <update id="saveExtractConfig" parameterType="HashMap">
     
       INSERT INTO TB_EXTRACT_CONFIG  (ID
						              , FILE_TYPE
						              , IMAGE_SIZE
						              , FPS
						              , CREATE_USER_ID
						              , CREATE_TS)
						        VALUES( #{movId}
						              , #{fileType}
						              , #{imageSize}
						              , #{fps, jdbcType=INTEGER}
						              , #{userId}
						              , SYSDATE)
  </update>
  
  <update id="saveExtract" parameterType="HashMap">
       MERGE INTO TB_IMAGE_INFO A
       USING DUAL
       ON  A.ID = #{id, jdbcType=VARCHAR}
       WHEN MATCHED THEN 
       UPDATE SET LABELING_YN  = #{lablelingYn}
                , UPDATE_USER_ID = #{updateUserId, jdbcType=VARCHAR}
                , UPDATE_TS   = SYSDATE
       WHEN NOT MATCHED THEN
       INSERT  (ID
              , DATA_ID
              , FILE_ID
              , STATUS
              , CREATE_USER_ID
              , CREATE_TS
              , UPDATE_USER_ID
              , UPDATE_TS)
        VALUES( #{id}
              , #{dataId}
              , #{fileId, jdbcType=VARCHAR}
              , #{status, jdbcType=VARCHAR}
              , #{createUserId}
              , SYSDATE
              , #{updateUserId}
              , SYSDATE)
   </update>
   
   <update id="deleteFrame" parameterType="HashMap">
       UPDATE TB_MOVIE_INFO
       SET EXTRACT_STATUS_CD =  NULL
         , FILE_TYPE =  NULL
         , IMAGE_SIZE =  NULL
         , FPS =  NULL
         , EXTRACT_START_TS = NULL
         , UPDATE_USER_ID = #{userId, jdbcType=VARCHAR}
         , UPDATE_TS   = SYSDATE
       <where>
       AND ID IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("movId")'>
            #{col }
         </if>
	   </foreach> 
    	</foreach>     
       </where>
  </update>
  
   <delete id="deleteAllObjectFrame" parameterType="HashMap">
       DELETE FROM TB_OBJECT_INFO
       <where>
       AND IMAGE_ID IN 
       (SELECT ID FROM TB_IMAGE_INFO
        WHERE PARENT_ID IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("movId")'>
            #{col }
         </if>
	   </foreach> 
	   )
    	</foreach>     
       </where>
  </delete>
  
   <delete id="deleteAllImageFrame" parameterType="HashMap">
       DELETE FROM TB_IMAGE_INFO
       <where>
       AND PARENT_ID IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("movId")'>
            #{col }
         </if>
	   </foreach> 
    	</foreach>     
       </where>
  </delete>
  
  <delete id="deleteAllFileFrame" parameterType="HashMap">
       DELETE FROM TB_FILE
       <where>
       AND ID IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("movId")'>
            #{col }
         </if>
	   </foreach> 
   	  </foreach>     
       </where>
  </delete>
  
  <select id="selectDeleteFileFrame" parameterType="HashMap" resultType="CmmnMap">
       SELECT FILE_PATH
            , FILE_NM
       FROM TB_FILE
       <where>
       AND ID IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("movId")'>
            #{col }
         </if>
	   </foreach> 
   	  </foreach>     
       </where>
  </select>
  
   <delete id="deleteObjectsByFrame" parameterType="hashmap">
       DELETE FROM TB_OBJECT_INFO
       <where>
       AND IMAGE_ID IN 
       (SELECT ID FROM TB_IMAGE_INFO
        WHERE PARENT_ID =  #{id}
        AND FILE_SEQ IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("seq")'>
             #{col , jdbcType=INTEGER}
         </if>
	   </foreach> 
   	</foreach> )    
       </where>
   </delete>
   
   <delete id="deleteImgsByFrame" parameterType="hashmap">
       DELETE FROM TB_IMAGE_INFO
       <where>
       AND PARENT_ID =  #{id}
       AND FILE_SEQ IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("seq")'>
             #{col , jdbcType=INTEGER}
         </if>
	   </foreach> 
   	</foreach>     
       </where>
   </delete>
   
   <delete id="deleteFilesByFrame" parameterType="hashmap">
       DELETE FROM TB_FILE
       <where>
       AND ID =  #{id}
       AND SEQ IN 
       <foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key"  >
         <if test='key.equals("seq")'>
            #{col , jdbcType=INTEGER}
         </if>
	   </foreach> 
   	</foreach>     
       </where>
   </delete>
   
</mapper>

