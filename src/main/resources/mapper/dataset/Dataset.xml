<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
   
<mapper namespace="Dataset">

  <select id="selectDatasetList" parameterType="hashmap" resultType="CmmnMap">
    
    SELECT  ROW_NUMBER() OVER(ORDER BY A.CREATE_TS DESC) AS RN
          , ROW_NUMBER() OVER(ORDER BY A.CREATE_TS ASC) AS IDX
   		  , A.ID
   		  , COLLECTION_DT
   		  , COLLECTION_POS
   		  , COLLECTION_DEVICE_CD
   		  , SOURCE_CD
   		  , DAY_OR_NIGHT
   		  , STILL_OR_MOVIE
   		  , DATA_TYPE
   		  , DATA_COORD_X
   		  , DATA_COORD_Y
   		  , DATA_CD
   		  , NATION_CD
   		  , A.SHIP_CLASS
   		  , A.SHIP_NM
   		  , F.UNIT_NM
   		  , A.CREATE_USER_ID
   		  , D.USER_NM CREATE_USER_NM
   		  , A.CREATE_TS 
   		  , A.UPDATE_USER_ID
   		  , E.USER_NM UPDATE_USER_NM
   		  , A.UPDATE_TS 
   		  , A.APPROVED_TS
   		  , (SELECT ORIGIN_FILE_NM FROM TB_FILE WHERE ID = A.ID AND FILE_TYPE != 'text/xml' AND ROWNUM = 1) ORIGIN_FILE_NM
   		  , (SELECT SEQ FROM TB_FILE WHERE ID = A.ID AND FILE_TYPE != 'text/xml' AND ROWNUM = 1) FILE_SEQ
   		  <include refid="Cmmn.pageAppend"></include>
   	FROM TB_DATASET_INFO A
   	<!-- LEFT JOIN TB_USER D -->
   	INNER JOIN (SELECT USER_ID,USER_NM,UNIT_ID FROM TB_USER 
	           WHERE UNIT_ID IN (SELECT ID 
	                            FROM TB_UNIT 
	                            START WITH ID = #{schUnitId}
	                            CONNECT BY PRIOR ID = UPPER_ID)) D
    ON A.CREATE_USER_ID = D.USER_ID
    LEFT JOIN TB_UNIT F
    ON A.UNIT_ID = F.ID
    LEFT JOIN TB_USER  E
    ON A.UPDATE_USER_ID = E.USER_ID
    <where>
    <if test='frDt != null and !frDt.equals("")'>
    AND A.CREATE_TS <![CDATA[>=]]>  concat(replace(#{frDt},'.','-'),' 00:00:00:0000')
    </if>
    <if test='toDt != null and !toDt.equals("")'>
    AND A.CREATE_TS <![CDATA[<=]]>  concat(replace(#{toDt},'.','-'),' 23:59:59:9999')
    </if>
    <if test='schCollection != null and !schCollection.equals("")'>
    AND A.COLLECTION_DEVICE_CD = #{schCollection}
    </if>
    <if test='schStillOrMovie != null and !schStillOrMovie.equals("")'>
    AND A.STILL_OR_MOVIE = #{schStillOrMovie}
    </if>
    <if test='schDayOrNight != null and !schDayOrNight.equals("")'>
    AND A.DAY_OR_NIGHT = #{schDayOrNight}
    </if>
    <if test='schDataCd != null and !schDataCd.equals("")'>
    AND A.DATA_CD = #{schDataCd}
    </if>
    <if test='schWorkerNm != null and !schWorkerNm.equals("")'>
    AND ( D.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')) OR
         E.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')))
    </if>
    <if test='schEtc != null and !schEtc.equals("")'>
    AND  A.ETC LIKE CONCAT('%',CONCAT(TRIM(#{schEtc}),'%'))
    </if>
    <if test='approvedYn != null and !approvedYn.equals("")'>
    <choose>
    <when test='approvedYn.equals("Y")'>
    AND  NOT A.APPROVED_TS IS NULL
    </when>
    <otherwise>
    AND  A.APPROVED_TS ISNULL
    </otherwise>
    </choose> 
    </if>
    </where>
   	
  </select>
  
  <select id="selectDataList" parameterType="hashmap" resultType="CmmnMap">
    
    SELECT  ROW_NUMBER() OVER(ORDER BY A.CREATE_TS DESC) AS RN
          , ROW_NUMBER() OVER(ORDER BY A.CREATE_TS ASC) AS IDX
   		  , A.ID
   		  , SOURCE_TYPE
   		  , COLLECTION_DT
   		  , COLLECTION_POS
   		  , COLLECTION_DEVICE_CD
   		  , SOURCE_CD
   		  , DAY_OR_NIGHT
   		  , STILL_OR_MOVIE
   		  , DATA_TYPE
   		  , DATA_COORD_X
   		  , DATA_COORD_Y
   		  , NATION_CD
   		  , A.SHIP_CLASS
   		  , A.SHIP_NM
   		  , A.CREATE_USER_ID
   		  , B.USER_NM CREATE_USER_NM
   		  , A.CREATE_TS 
   		  , A.UPDATE_USER_ID
   		  , C.USER_NM UPDATE_USER_NM
   		  , A.UPDATE_TS 
   		  , A.APPROVED_TS
   		  , (SELECT ORIGIN_FILE_NM FROM TB_FILE WHERE ID = A.ID AND FILE_TYPE != 'text/xml' AND ROWNUM = 1) ORIGIN_FILE_NM
   		  , (SELECT SEQ FROM TB_FILE WHERE ID = A.ID AND FILE_TYPE != 'text/xml' AND ROWNUM = 1) FILE_SEQ
   		  <include refid="Cmmn.pageAppend"></include>
   	FROM TB_DATASET_INFO A
   	INNER JOIN (SELECT USER_ID,USER_NM FROM TB_USER 
	           WHERE UNIT_ID IN (SELECT ID 
	                            FROM TB_UNIT 
	                            START WITH ID = #{schUnitId}
	                            CONNECT BY PRIOR ID = UPPER_ID)) B
    ON A.CREATE_USER_ID = B.USER_ID
    LEFT JOIN TB_USER  C
    ON A.UPDATE_USER_ID = C.USER_ID
    <where>
    <if test='frDt != null and !frDt.equals("")'>
    AND A.CREATE_TS <![CDATA[>=]]>  concat(replace(#{frDt},'.','-'),' 00:00:00:0000')
    </if>
    <if test='toDt != null and !toDt.equals("")'>
    AND A.CREATE_TS <![CDATA[<=]]>  concat(replace(#{toDt},'.','-'),' 23:59:59:9999')
    </if>
    <if test='schCollection != null and !schCollection.equals("")'>
    AND A.COLLECTION_DEVICE_CD = #{schCollection}
    </if>
    <if test='schStillOrMovie != null and !schStillOrMovie.equals("")'>
    AND A.STILL_OR_MOVIE = #{schStillOrMovie}
    </if>
    <if test='schDayOrNight != null and !schDayOrNight.equals("")'>
    AND A.DAY_OR_NIGHT = #{schDayOrNight}
    </if>
    <if test='schDataCd != null and !schDataCd.equals("")'>
    AND A.DATA_CD = #{schDataCd}
    </if>
    <if test='schWorkerNm != null and !schWorkerNm.equals("")'>
    AND ( B.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')) OR
         C.USER_NM LIKE CONCAT('%',CONCAT(TRIM(#{schWorkerNm}),'%')))
    </if>
    <if test='schEtc != null and !schEtc.equals("")'>
    AND  A.ETC LIKE CONCAT('%',CONCAT(TRIM(#{schEtc}),'%'))
    </if>
    <if test='approvedYn != null and !approvedYn.equals("")'>
    <choose>
    <when test='approvedYn.equals("Y")'>
    AND  NOT A.APPROVED_TS IS NULL
    </when>
    <otherwise>
    AND  A.APPROVED_TS ISNULL
    </otherwise>
    </choose> 
    </if>
    </where>
  
  </select>
  
  <select id="select" parameterType="hashmap" resultType="CmmnMap">
      SELECT 
   		    A.ID
   		   , SOURCE_TYPE
           , COLLECTION_DT
           , COLLECTION_POS
           , COLLECTION_DEVICE_CD
           , SOURCE_CD
           , DAY_OR_NIGHT
           , STILL_OR_MOVIE
           , DATA_TYPE
           , DATA_COORD_X
           , DATA_COORD_Y
           , DATA_CD
           , NATION_CD
           , SHIP_CLASS
           , SHIP_NM
           , ETC
   		  , A.CREATE_USER_ID
   		  , A.CREATE_TS 
   		  , A.UPDATE_USER_ID
   		  , A.UPDATE_TS 
   		  , A.APPROVED_TS
   	FROM TB_DATASET_INFO A
   	<where>
   	AND ID = #{id}
   	</where>
  </select>
  
   <select id="selectVo" parameterType="hashmap" resultType="DatasetVo">
      SELECT 
   		    A.ID
   		   , SOURCE_TYPE
           , COLLECTION_DT
           , COLLECTION_POS
           , COLLECTION_DEVICE_CD
           , SOURCE_CD
           , DAY_OR_NIGHT
           , STILL_OR_MOVIE
           , DATA_TYPE
           , DATA_COORD_X
           , DATA_COORD_Y
           , DATA_CD
           , NATION_CD
           , SHIP_CLASS
           , SHIP_NM
           , ETC
   		  , A.CREATE_USER_ID
   		  , A.CREATE_TS 
   		  , A.UPDATE_USER_ID
   		  , A.UPDATE_TS 
   		  , A.APPROVED_TS
   	FROM TB_DATASET_INFO A
   	<where>
   	AND ID = #{id}
   	</where>
  </select>
  
  <update id="mergeDataset" parameterType="DatasetVo">
       MERGE INTO TB_DATASET_INFO A
       USING DUAL
       ON  A.ID = #{id, jdbcType=VARCHAR}
       WHEN MATCHED THEN 
       UPDATE SET COLLECTION_DT = #{collectionDt, jdbcType=VARCHAR}
                , COLLECTION_POS  = #{collectionPos, jdbcType=VARCHAR}
                , COLLECTION_DEVICE_CD = #{collectionDeviceCd, jdbcType=VARCHAR}
                , SOURCE_CD = #{sourceCd, jdbcType=VARCHAR}
                , DAY_OR_NIGHT = #{dayOrNight, jdbcType=VARCHAR}
                , STILL_OR_MOVIE = #{stillOrMovie, jdbcType=VARCHAR}
                <if test='dataType != null and !dataType.equals("")'>
                , DATA_TYPE = #{dataType, jdbcType=VARCHAR}
                </if>
                <if test='dataCoordX != null and !dataCoordX.equals("")'>
                , DATA_COORD_X = #{dataCoordX, jdbcType=VARCHAR}
                </if>
                <if test='dataCoordY != null and !dataCoordY.equals("")'>
                , DATA_COORD_Y = #{dataCoordY, jdbcType=VARCHAR}
                </if>
                <if test='dataCd != null and !dataCd.equals("")'>
                , DATA_CD = #{dataCd, jdbcType=VARCHAR}
                </if>
                <if test='nationCd != null and !nationCd.equals("")'>
                , NATION_CD = #{nationCd, jdbcType=VARCHAR}
                </if>
                <if test='shipClass != null and !shipClass.equals("")'>
                , SHIP_CLASS = #{shipClass, jdbcType=VARCHAR}
                </if>
                <if test='shipNm != null and !shipNm.equals("")'>
                , SHIP_NM = #{shipNm, jdbcType=VARCHAR}
                </if>
                , UNIT_ID = #{unitId}
                , ETC = #{etc, jdbcType=VARCHAR}
                , UPDATE_USER_ID   = #{updateUserId}
                , UPDATE_TS   = SYSDATE
       WHEN NOT MATCHED THEN
       INSERT  (ID
              , SOURCE_TYPE
              , COLLECTION_DT
              , COLLECTION_POS
              , COLLECTION_DEVICE_CD
              , SOURCE_CD
              , DAY_OR_NIGHT
              , STILL_OR_MOVIE
              <if test='dataType != null and !dataType.equals("")'>
              , DATA_TYPE
              </if>
              <if test='dataCoordX != null and !dataCoordX.equals("")'>
              , DATA_COORD_X
              </if>
              <if test='dataCoordY != null and !dataCoordY.equals("")'>
              , DATA_COORD_Y
              </if>
              <if test='dataCd != null and !dataCd.equals("")'>
              , DATA_CD
              </if>
              <if test='nationCd != null and !nationCd.equals("")'>
              , NATION_CD
              </if>
              <if test='shipClass != null and !shipClass.equals("")'>
              , SHIP_CLASS
              </if>
              <if test='shipNm != null and !shipNm.equals("")'>
              , SHIP_NM
              </if>
              , UNIT_ID
              , ETC
              , CREATE_USER_ID
              , CREATE_TS
              , UPDATE_USER_ID
              , UPDATE_TS)
        VALUES( #{id}
              , #{sourceType}
              , #{collectionDt, jdbcType=VARCHAR}
              , #{collectionPos}
              , #{collectionDeviceCd}
              , #{sourceCd}
              , #{dayOrNight}
              , #{stillOrMovie}
              <if test='dataType != null and !dataType.equals("")'>
              , #{dataType}
              </if>
              <if test='dataCoordX != null and !dataCoordX.equals("")'>
              , #{dataCoordX}
              </if>
              <if test='dataCoordY != null and !dataCoordY.equals("")'>
              , #{dataCoordY}
              </if>
              <if test='dataCd != null and !dataCd.equals("")'>
              , #{dataCd}
              </if>
              <if test='nationCd != null and !nationCd.equals("")'>
              , #{nationCd}
              </if>
              <if test='shipClass != null and !shipClass.equals("")'>
              , #{shipClass}
              </if>
              <if test='shipNm != null and !shipNm.equals("")'>
              , #{shipNm}
              </if>
              , #{unitId}
              , #{etc}
              , #{createUserId}
              , SYSDATE
              , #{updateUserId}
              , SYSDATE)
  </update>
  
  <update id="deleteList" parameterType="hashmap">
    DELETE FROM TB_DATASET_INFO
   	<where>
   	AND ID IN 
   	<foreach collection="list" item="row" open="(" close=")" separator=",">
   	   <foreach collection="row" item="col" index="key" >
         <if test='key.equals("id")'>
            #{col}
         </if>
	   </foreach> 
   	</foreach>     
   	</where> 
  </update>
  
   <delete id="deleteDataSet" parameterType="hashmap">
    DELETE FROM TB_DATASET_INFO
   	<where>
   	AND ID = #{id}
   	</where> 
  </delete>
  
  <delete id="deleteFileById" parameterType="hashmap">
    DELETE FROM TB_FILE
   	<where>
   	AND ID = #{fileId}
   	</where> 
  </delete>
  
  
   <update id="approve" parameterType="hashmap">
    UPDATE TB_DATASET_INFO
    SET APPROVED_TS = SYSDATE
   	<where>
   	AND APPROVED_TS ISNULL
   	AND ID = #{id}
   	
   	</where> 
  </update>
</mapper>

